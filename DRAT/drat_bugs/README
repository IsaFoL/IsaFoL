*** Problem f1: Flawed RAT check

The formula is clearly satisfiable, but both forward and backward mode manage to prove UNSAT!
With f1s.drat, also SAT can be proved.

Analysis attempt:
  The literal 1 is set by unit propagation. Although already assigned, it is chosen as resolution
  literal for the RAT check.




*** Problem f2: Segfault and memory crapping on malformed DIMACs files
Syntactically malformed dimacs-files may produce segfaults.
This could probably be maliciously exploited, or unintentionally corrupt drat-trims
memory and cause other issues (eg wrong proofs). Here: Header missing causes segfault.
But also wrong number of clauses seems to cause memory crapping.


*** Problem f3
Minimized version of f1

*** Problem f4: Numerical overflows not detected
On a standard Ubuntu box with gcc, drat-trim uses 32 bit signed integers for literals, and does not check for overflow.
The problem here is clearly satisfiable, unless one interprets the numbers modulo 32 bit signed, then it gets unsatisfiable.
